#!/bin/sh
#
# $FreeBSD$
#
# PROVIDE: tincd
# REQUIRE: ipfilter FILESYSTEMS sysctl netif
# BEFORE: SERVERS routing
# KEYWORD: nojail
#

. /etc/rc.subr

name="tincdcustom"
command="/usr/local/sbin/tincd"
stop_cmd=tincd_stop
start_cmd=tincd_start
reload_cmd="tincd_reload"
extra_commands="reload"
procname=${command:-tincd}
rcvar="tincdcustom_enable"

config="/usr/local/etc/tinc"
netsfile="$config/nets.boot"
logfile="/var/log/tinc.log"

load_rc_config $name

[ -z "$tincdcustom_enable" ] && tincdcustom_enable="NO"

find_nets () {
  if [ ! -f $netsfile ] ; then
    echo "Please create $netsfile."
    exit 0
  fi
  NETS="`egrep '^[ ]*[a-zA-Z0-9_-]+[ ]*$' $netsfile`"
}

# start tincd
tincd_start()
{
    find_nets
    echo "Starting tincd"
    for n in $NETS ; do
      echo "Starting tincd for: $n"
      $command -n $n $EXTRA --logfile=$logfile
    done

    if [ -f /etc/rc.d/ipfilter ] ; then
        # Resync ipfilter
        /etc/rc.d/ipfilter quietresync
    fi
}

# stop tincd
tincd_stop()
{
	echo "Stopping tincd"
	find_nets
    for n in $NETS ; do
      echo "Stopping tincd for: $n"
      $command -n $n $EXTRA -k
    done
}

tincd_reload()
{
    find_nets
    echo "Sending HUP to tincd"
    for n in $NETS ; do
      echo "Sending HUP to tincd for: $n"
      $command -n $n $EXTRA -kHUP
    done
}

run_rc_command "$1"
# eof